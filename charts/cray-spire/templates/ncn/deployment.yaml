#
# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
{{- define "getXname" -}}
{{- if $.Values.vshasta }}
echo ${NODE_NAME} | tr -d \-
{{ else }}
cat /proc/cmdline | sed "s/.*xname=\([A-Za-z0-9]*\).*/\1/"
{{ end }}
{{ end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: request-ncn-join-token
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      name: request-ncn-join-token
  template:
    metadata:
      name: request-ncn-join-token
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        name: request-ncn-join-token
    spec:
      serviceAccountName: {{ include "spire.fullname" . }}-request-ncn-join-token
      tolerations:
        # this toleration is to have the daemonset runnable on master nodes
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      initContainers:
        - name: init-setperms
          image: "{{ .Values.ncn.init.repository }}:{{ .Values.ncn.init.tag }}"
          command:
            - '/bin/sh'
          args:
            - '-x'
            - '-c'
            - 'touch /token/{{ .Values.ncn.filename }} /token/spire-agent.conf /token/bundle.crt; chown 100:101 /token /token/{{ .Values.ncn.filename }} /token/spire-agent.conf /token/bundle.crt'
          volumeMounts:
            - name: token
              mountPath: /token
        - name: request-ncn-join-token
          image: "{{ .Values.ncn.curl.repository }}:{{ .Values.ncn.curl.tag }}"
          command:
            - '/bin/sh'
          args:
            - '-x'
            - '-c'
            - 'count=0; while [ $count -lt 6 ]; do if ! curl --connect-timeout 15 -k -X POST -d type=ncn\&xname=$({{ template "getXname" . }}) "$URL" > /tmp/token; then sleep 5; count=$((count + 1)); else break; fi; done; if [ $count -eq 6 ]; then exit 1; fi; if ! grep -qiE "error|invalid" /tmp/token; then echo "join_token=$(cat /tmp/token | cut -d\" -f4)" > "/token/{{ .Values.ncn.filename }}"; else exit 2;fi; cat /config/spire-agent.conf > /token/spire-agent.conf ; while ! [ -e /bundle/bundle.crt ]; do sleep 10; done; cat /bundle/bundle.crt > /token/bundle.crt'
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: URL
              value: "{{ .Values.ncn.url }}"
          volumeMounts:
            - name: token
              mountPath: /token
            - name: {{ template "spire.name" . }}-config
              mountPath: /config
              readOnly: true
            - name: {{ include "spire.fullname" . }}-bundle
              mountPath: /bundle
              readOnly: true
        - name: init-restoreperms
          image: "{{ .Values.ncn.init.repository }}:{{ .Values.ncn.init.tag }}"
          command:
            - '/bin/sh'
          args:
            - '-x'
            - '-c'
            - 'chown root:root /token /token/{{ .Values.ncn.filename }} /token/spire-agent.conf /token/bundle.crt'
          volumeMounts:
            - name: token
              mountPath: /token
      containers:
        - name: pause
          image: "{{ .Values.ncn.pause.repository }}:{{ .Values.ncn.pause.tag }}"
      volumes:
        - name: token
          hostPath:
            path: "{{ .Values.ncn.path }}/conf"
            type: DirectoryOrCreate
        - name: {{ template "spire.name" . }}-config
          configMap:
            name: {{ template "spire.name" . }}-ncn-config
        - name: {{ include "spire.fullname" . }}-bundle
          configMap:
            name: {{ include "spire.fullname" . }}-bundle
